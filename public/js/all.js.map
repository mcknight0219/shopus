{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"all.js","sourcesContent":["Vue.http.headers.common['X-CSRF-TOKEN'] = $('meta[name=\"csrf_token\"]').attr('content');\n\nnew Vue({\n    el: '#app',\n\n    data: {\n        loginData: {\n            email: '',\n            password: ''\n        },\n\n        registerData: {\n            email: '',\n            password: ''\n        },\n\n        profileData: {\n            weixin: '',\n            city: '',\n            country: '',\n            editable: false,\n            editing: false\n        },\n\n        nameFormData: {\n            firstName: '',\n            lastName: '',\n            errors: ''\n        }\n    },\n\n    methods: {\n        enableProfileEdit: function() {\n            this.profileData.editable = true;\n        },\n\n        disableProfileEdit: function() {\n            this.profileData.editable = false;\n        },\n\n        showNameEditor: function(event) {\n            var that = this;\n            $(event.target).webuiPopover({\n                placement: 'right',\n                dismissible: false,\n                width: '250px',\n                closeable: true,\n                content: function() {\n                    return $('#popoverNameForm').html();\n                },\n                onShow: function() {\n                    that.profileData.editing = true;\n                },\n                onHide: function() {\n                    that.profileData.editing = false;\n                }\n            });\n        },\n\n        showAddressEditor: function(event) {\n            var that = this;\n            $(event.target).webuiPopover({\n                placement: 'right',\n                dismissible: false,\n                width: '250px',\n                closeable: true,\n                content: function() {\n                    return $('#popoverAddressForm').html();\n                },\n                onShow: function() {\n                    that.profileData.editing = true;\n                },\n                onHide: function() {\n                    that.profileData.editing = false;\n                }\n            });\n        },\n\n        // Save changes on server\n        update: function(event) {\n            alert('Hello');\n\n            this.$http.post('profile/edit', {\n                \"firstName\": this.nameFormData.firstName,\n                \"lastName\" : this.nameFormData.lastName\n            }, function (data) {\n                console.log(data);\n            });\n        },\n\n        login: function() {\n            var re = /^\\S+@\\S+$/;\n            if (this.loginData.email === '' || this.loginData.email.match(re) === null) {\n                this.notify($('#email'), 'bottom', 'Email entered is not correct');\n            } else if (this.loginData.password === '') {\n                this.notify($('#password'), 'bottom', 'Password must not be empty');\n            } else {\n                $('#loginForm').submit();\n            }\n        },\n\n        register: function() {\n            var re = /^\\S+@\\S+$/;\n            if (this.registerData.email === '' || this.registerData.email.match(re) === null) {\n                this.notify($('#email'), 'bottom', 'Email entered is not correct');\n            } else if (this.registerData.password === '') {\n                this.notify($('#password'), 'bottom', 'Password must not be empty');\n            } else {\n                $('#registerForm').submit();\n            }\n        },\n\n\n        notify: function($element, $placement, $content) {\n            $element.webuiPopover({\n                content: $content,\n                placement: $placement,\n                trigger: 'manual',\n                dismissible: true,\n                autoHide: 3500\n            });\n            $element.webuiPopover('show');\n        }\n    }\n});\n\n\n$(document).ready(function() {\n    // First time I feel sick about jquery :(\n    if( location.pathname === '/cms/brand' ) {\n        $(document).on('click', '.title', function(e) {\n            var target = $(e.target);\n            var brandId = target.closest('.productcell').attr('data-index-number');\n            var orig = target.text();\n            target.replaceWith(function() {\n                return \"<input id=\\\"brandName\\\" class=\\\"title\\\" style=\\\"outline:none; border-width: 0 0 2px 0\\\" type=\\\"text\\\" data-source=\\\"\" + orig + \"\\\">\";\n            });\n            $('#brandName').focus();\n            $('#brandName').focusout(function() {\n                var isEmpty = $(this).val() === '';\n                var newVal = isEmpty ? $(this).attr('data-source') : $(this).val();\n                $(this).replaceWith(function() {\n                   return \"<div class=\\\"title singleline editable\\\">\" + newVal + \"</div>\";\n                });\n\n                if( !isEmpty ) {\n                    _postBrandChange(brandId, 'name', newVal);\n                }\n            })\n        });\n\n        $(document).on('click', '.caption', function(e) {\n            var target = $(e.target);\n            var brandId = target.closest('.productcell').attr('data-index-number');\n            var orig = target.text();\n            target.replaceWith(function() {\n            \treturn \"<input id=\\\"brandWebsite\\\" class=\\\"caption\\\" style=\\\"outline:none; border-width: 0 0 2px 0\\\" type=\\\"text\\\" data-source=\\\"\" + orig + \"\\\">\";\n            });\n\t\t\t$('#brandWebsite').focus();\n\t\t\t$('#brandWebsite').focusout(function() {\n                var isEmpty = $(this).val() === '';\n\t\t\t\tvar newVal = isEmpty ? $(this).attr('data-source') : $(this).val();\n\t\t\t\t$(this).replaceWith(function() {\n\t\t\t\t return \"<div class=\\\"caption singleline editable\\\">\" + newVal  + \"</div>\";\n\t\t\t\t});\n                if( !isEmpty ) {\n                    _postBrandChange(brandId, 'website', newVal);\n                }\n\t\t\t});\n        });\n\n        $(document).on('change', '.selector', function(e) {\n            var target = $(e.target);\n            var brandId = target.closest('.productcell').attr('data-index-number');\n            var file = new FormData();\n            if( target[0].files && target[0].files[0] ) {\n                file.append('logo', target[0].files[0]);\n                $.ajax({\n                    url: '/cms/brand/' + brandId + '/edit',\n                    type: 'POST',\n                    data: file,\n                    processData: false,\n                    contentType: false,\n                    dataType: 'JSON',\n                    success: function(data, textStatus, xhr) {\n                        if( xhr.status === 200) {\n                            // jQuery is fragile\n                            target.next().attr('src', '/cms/brand/' + brandId + '/logo');\n                        }\n                    },\n                    error: function(xhr, textStatus, error) {\n                        console.log(error);\n                    }\n                });\n            }\n        });\n    }\n\n    if( location.pathname === '/cms/product/add' ) {\n        $('#fileSelector').change(function() {\n            _toggleProgressbar();\n            var file = new FormData();\n            if( $(this)[0].files &&  $(this)[0].files[0] ) {\n                var type = $('form select').val().toLowerCase();\n                file.append(type, $(this)[0].files[0]);\n                $.ajax({\n                    xhr: function() {\n                        var xhr = new window.XMLHttpRequest();\n                        xhr.upload.addEventListener('progress', function(e) {\n                            if( e.lengthComputable ) {\n                                var percent = e.loaded / e.total * 100;\n                                console.log(percent);\n                                $('#uploadProgressbar').attr('value', percent);\n                            }\n                        }, false);\n                        \n                        return xhr;\n                    },\n                    url: '/cms/product/photo',\n                    type: 'POST',\n                    data: file,\n                    processData: false,\n                    contentType: false,\n                    dataType: 'JSON',\n                    success: function(data, textStatus, xhr) {\n                        _toggleProgressbar();\n                        $('#fileSelector').val = \"\";\n                    },\n                    error: function(jqXHR, status, errorMessage) {\n                        console.log(errorMessage);\n                    }\n                });\n            }\n        });\n\n        $('.borderedbutton').click(function() {\n            _remindEmpty($('form input[name=\"brand\"]'), 'Brand cannot be empty') ||\n            _remindEmpty($('form input[name=\"name\"]'),  'Name cannot be empty') ||\n            _remindEmpty($('form input[name=\"price\"]'), 'Price cannot be empty') ||\n            _remindEmpty($('form textarea'), 'Description cannot be empty') || $('form').submit();\n        });\n    }\n});\n\nfunction _postBrandChange(brandId, fieldName, value) {\n    var o = {};\n    o[fieldName] = value;\n\t$.ajax({ url: '/cms/brand/' + brandId + '/edit', type: 'POST', dataType: 'text', data: o });\n}\n\nfunction _toggleProgressbar() {\n    var $selector = $('#uploadProgressbar');\n    if( $selector.attr('hidden') === undefined ) {\n        $selector.attr('hidden', true);\n    } else {\n        $selector.removeAttr('hidden');\n    }\n}"],"sourceRoot":"/source/"}